<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Henry @ RC S1</title>
    <link>https://recurse.henrystanley.com/</link>
    <description>Recent content on Henry @ RC S1</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Jul 2018 13:08:37 -0400</lastBuildDate>
    
        <atom:link href="https://recurse.henrystanley.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>Getting started with Graal</title>
      <link>https://recurse.henrystanley.com/post/graal-quickstart/</link>
      <pubDate>Mon, 30 Jul 2018 13:08:37 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/graal-quickstart/</guid>
      <description>GraalVM promises to be &amp;ldquo;one VM to rule them all&amp;rdquo; â€“Â a way to &amp;ldquo;run code faster anywhere&amp;rdquo;.
The way it does this is using language interpreters written in a framework called Truffle:
 Truffle is a framework for implementing languages using nothing more than a simple abstract syntax tree interpreter.
 These interpreters turn your code into an AST which can be run on the GraalVM. This gives you:</description>
    </item>
    
    
    
    <item>
      <title>Multi-file wordcount â€“Â an exercise in concurrent Ruby</title>
      <link>https://recurse.henrystanley.com/post/concurrent-ruby/</link>
      <pubDate>Tue, 17 Jul 2018 13:41:00 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/concurrent-ruby/</guid>
      <description>Web frameworks have TodoMVC as a standard exercise, in which you build a little to-do list app. It&amp;rsquo;s a cute way to showcase the features of that framework and get to know it a little better.
My friend Dan Friedman is trying to do the same but for programming languages, with concurrent-wc! It&amp;rsquo;s an exercise to build a utility that mimicks wc -l (which counts the lines in a file), but applied to a whole directory â€“Â which is a nice excuse to use some concurrency!</description>
    </item>
    
    
    
    <item>
      <title>Tracking physical presence with packet sniffing</title>
      <link>https://recurse.henrystanley.com/post/physical-presence-tracking-mac-addresses/</link>
      <pubDate>Tue, 26 Jun 2018 14:00:00 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/physical-presence-tracking-mac-addresses/</guid>
      <description>I wanted a way to see who was in the Recurse Center space at any given time â€“ or to be able to check if people were in before deciding whether I wanted to take the L to Manhattan (on a weekend, say).
Wi-fi is nearby I figure someone being connected to the Recurse Center Wi-Fi is a pretty good proxy for whether or not they&amp;rsquo;re in the space.</description>
    </item>
    
    
    
    <item>
      <title>ðŸ”— Drug elimination calculator</title>
      <link>https://recurse.henrystanley.com/post/drug-elimination-calculator/</link>
      <pubDate>Mon, 18 Jun 2018 18:19:56 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/drug-elimination-calculator/</guid>
      <description></description>
    </item>
    
    
    
    <item>
      <title>ðŸ”— Where We Donate and Why It Matters</title>
      <link>https://recurse.henrystanley.com/post/where-we-donate-and-why-it-matters/</link>
      <pubDate>Fri, 15 Jun 2018 10:00:10 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/where-we-donate-and-why-it-matters/</guid>
      <description>Redirecting&amp;hellip;</description>
    </item>
    
    
    
    <item>
      <title>Scope insensitivity and d3.js</title>
      <link>https://recurse.henrystanley.com/post/scope-insensitivity-and-d3/</link>
      <pubDate>Fri, 15 Jun 2018 10:00:00 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/scope-insensitivity-and-d3/</guid>
      <description>tl;dr: Check out my Observable notebook showing how vast the scale of factory farming is.
 Scope insensitivity is our inabiity to grasp really large numbers. When you think about the difference between a million people and a billion people, your brain can&amp;rsquo;t really represent that thousandfold difference, so it gets compressed down to being abstractly &amp;lsquo;larger&amp;rsquo;. We don&amp;rsquo;t suffer the same bias with quantities small enough to visualise.</description>
    </item>
    
    
    
    <item>
      <title>Blagging your way through d3.js</title>
      <link>https://recurse.henrystanley.com/post/blagging-your-way-through-d3js/</link>
      <pubDate>Wed, 13 Jun 2018 17:00:00 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/blagging-your-way-through-d3js/</guid>
      <description>With twelve weeks to do whatever programming projects I wanted, I figure now is the time to try something I&amp;rsquo;ve never touched before.
Data visualisation is totally foreign to me (at least, anything beyond charts in Excel is). I was aware of d3.js, a JavaScript library for graphing data, so I thought I&amp;rsquo;d try it out.
Turns out it&amp;rsquo;s not a &amp;ldquo;library for graphing data&amp;rdquo; at all. It&amp;rsquo;s really a DOM manipulation library, or a library for processing data and using it to update elements on a webpage.</description>
    </item>
    
    
    
    <item>
      <title>Hey, Cochrane - quick answers to medical questions</title>
      <link>https://recurse.henrystanley.com/post/hey-cochrane/</link>
      <pubDate>Tue, 05 Jun 2018 10:33:20 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/hey-cochrane/</guid>
      <description>Cochrane is a body which produces meta-analyses on medical topics â€“ basically, they pick a subject to review, trawl through all the existing scientific papers that have been published, throw away almost all of them because they&amp;rsquo;re too small, not statistically rigorous, or have some other methodological problem, and then use what&amp;rsquo;s left to make a judgement on the topic.
Cochrane reviews are pretty much the gold standard for &amp;ldquo;truth&amp;rdquo; in medical science.</description>
    </item>
    
    
    
    <item>
      <title>Becoming a dramatically better programmer</title>
      <link>https://recurse.henrystanley.com/post/better/</link>
      <pubDate>Thu, 31 May 2018 16:15:00 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/better/</guid>
      <description>In our first week, we were told that the RC faculty wanted to do one thing above else â€“ to remove any obstacles in the way of us becoming dramatically better programmers.
But what does that mean? What does getting dramatically better actually look like?
I&amp;rsquo;ve outlined a few broad areas that programmers striving to get better might focus on. I&amp;rsquo;ve also suggested some ways to tackle these areas â€“ but this is by no means complete, or correct!</description>
    </item>
    
    
    
    <item>
      <title>Learning Programming Languages with Spaced Repetition</title>
      <link>https://recurse.henrystanley.com/post/spaced-repetition/</link>
      <pubDate>Tue, 29 May 2018 09:30:00 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/spaced-repetition/</guid>
      <description>The spacing effect shows that the most efficient way to learn material is to expose yourself to it at increasing intervals, instead of cramming. Spaced repetition learning uses this effect to show you flashcards at intervals optimised for knowledge retention.
This is especially good for learning languages â€“Â it&amp;rsquo;s how Duolingo decides when to show you old vocabulary to review. So why not use it for learning programming languages as well?</description>
    </item>
    
    
    
    <item>
      <title>BitTorrent clients for fun and profit</title>
      <link>https://recurse.henrystanley.com/post/bittorrent-client/</link>
      <pubDate>Wed, 23 May 2018 16:12:18 -0400</pubDate>
      
      <guid>https://recurse.henrystanley.com/post/bittorrent-client/</guid>
      <description>This is a work in progress.
&amp;hellip;well, not really for profit. The world doesn&amp;rsquo;t need another BitTorrent client. But it&amp;rsquo;s a great project for learning about an interesting web protocol, exploring the networking stack, getting to grips with Wireshark and debugging, and learning how things work.
Reading a .torrent The torrent files you might find somewhere like The Pirate Bay are encoded with bencode (pronounced &amp;ldquo;B-Encode&amp;rdquo;, but I&amp;rsquo;m still gonna say &amp;ldquo;ben-code&amp;rdquo;), a terse file format for representing a few simple data structures (strings, ints, dicts and lists).</description>
    </item>
    
    
  </channel>
</rss>
